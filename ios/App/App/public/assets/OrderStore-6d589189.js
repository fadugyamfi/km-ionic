import{v as l,a4 as w,a5 as f,a as h,a6 as a,C as n}from"./index-f92ce253.js";import{O as i}from"./Order-423a7fc9.js";const d=l();new w;const O=f("order",{state:()=>({orders:[new i({id:1,businesses_id:71,customer_id:72,start_dt:"2023-10-25 10:00:00",created_at:"2023-10-25 10:00:00",due_date:"2023-11-01",order_status_id:8,order_status:{id:8,name:"Cancelled"}})]}),actions:{async fetchPlacedOrders(s={}){var e;const r=h();try{const t={customer_id:(e=r.activeBusiness)==null?void 0:e.id,limit:50,...s},o=await a.get("/v2/orders",{params:t});if(o.status===200){const c=o.data.data;this.orders=c.map(u=>new i(u))}}catch(t){n(t)}},async fetchReceivedOrders(s={}){var r;try{const t={businesses_id:(r=h().activeBusiness)==null?void 0:r.id,limit:50,...s},o=await a.get("/v2/orders",{params:t});if(o.status===200){const c=o.data.data;this.orders=c.map(u=>new i(u))}}catch(e){n(e)}},async fetchOrder(s){try{const r=await a.get("/v2/orders/".concat(s));return r.status==200?new i(r.data.data):null}catch(r){return n(r),null}},async deleteOrder(s){try{(await a.delete("/v2/orders/".concat(s))).status===204&&(this.orders=this.orders.filter(e=>e.id!==s),d.showSuccess("Order deleted successfully."))}catch(r){n(r),d.showError("Failed to delete order.")}},async updateOrder(s,r){try{const e=await a.put("/v2/orders/".concat(s),r);if(e.status===200){const t=this.orders.findIndex(o=>o.id===s);t!==-1&&(this.orders[t]=new i(e.data.data),d.showSuccess("Order updated successfully."))}}catch(e){n(e),d.showError("Failed to update order.")}},async editOrder(s,r){try{const e=await a.put("/v2/orders/".concat(s),r);if(e.status===200){const t=this.orders.findIndex(o=>o.id===s);t!==-1&&(this.orders[t]=new i(e.data.data),d.showSuccess("Order edited successfully."))}}catch(e){n(e),d.showError("Failed to edit order.")}},async reorderOrder(s){try{const r=this.orders.find(o=>o.id===s);if(!r){d.showError("Order not found for reorder.");return}const e={businesses_id:r.businesses_id,customer_id:r.customer_id},t=await a.post("/v2/orders",e);if(t.status===201){const o=t.data.data,c=new i(o);this.orders.push(c),d.showSuccess("Order reordered successfully.")}}catch(r){n(r),d.showError("Failed to reorder order.")}}}});export{O as u};
