System.register(["./index-legacy-cc225d81.js","./Order-legacy-de27059d.js","./BusinessStore-legacy-6f130e52.js"],(function(s,e){"use strict";var r,t,i,d,o,n,u;return{setters:[s=>{r=s.a4,t=s.a5,i=s.v,d=s.a},s=>{o=s.O,n=s.a},s=>{u=s.u}],execute:function(){const e=new r,c="kola.cart";u(),s("u",t("cart",{state:()=>({items:[],orders:[]}),actions:{async loadFromStorage(){let s=await e.get(c);return this.orders=s.map((s=>new o(s)))||[],this},getProductItem(s){let e=null;return this.orders.forEach((r=>{const t=r.order_items.find((e=>e.products_id=s.id));if(t)return e=t,!1})),e},hasProduct(s){if(!s||!this.orders)return!1;let e=!1;return this.orders.forEach((r=>{if(r.order_items.findIndex((e=>e.products_id=s.id))>-1)return e=!0,!1})),e},getTotalCost(){return this.orders.reduce(((s,e)=>s+e.getTotal()),0)},addProduct(s,e=1){const r=i(),t=d();let u=this.orders.find((e=>e.businesses_id==s.businesses_id));var c,a;u||(u=new o({businesses_id:s.businesses_id,customer_id:null===(c=t.activeBusiness)||void 0===c?void 0:c.id,cms_users_id:null===(a=t.user)||void 0===a?void 0:a.id,business:s.business}),this.orders.push(u));let h=u.order_items.find((e=>e.products_id==s.id));var _;return h?(h.quantity=e,r.showInfo("Increased quantity in cart")):(h=new n({businesses_id:s.businesses_id,products_id:s.id,product_price:s.product_price,currency_symbol:null===(_=s.currency)||void 0===_?void 0:_.symbol,product_image:s.image,product_name:s.product_name,unit_price:s.product_price,quantity:e,total_price:e*(s.product_price||0),currencies_id:1,product_units_id:1}),u.order_items.push(h),r.showSuccess("Added To Cart")),this.persist(),this},removeOrderAtIndex(s){const e=this.orders.findIndex((e=>e.businesses_id==s.businesses_id));return this.orders.splice(e,1),i().showSuccess("Removed From Cart"),this.persist(),this},removeAtItemIndex(s,e){const r=this.orders.findIndex((e=>e.businesses_id==s.businesses_id));return this.orders[r].order_items.splice(e,1),i().showSuccess("Removed From Cart"),this.persist(),this},removeAtIndex(s){return this.orders.splice(s,1),i().showSuccess("Removed From Cart"),this.persist(),this},removeProduct(s){const e=this.orders.findIndex((e=>e.product.id==s.id));return e>-1?this.removeAtIndex(e):this},updateQuantity(s,e=0){},async persist(){await e.set(c,this.orders,30,"days")}}}))}}}));
